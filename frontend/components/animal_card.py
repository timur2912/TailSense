"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
"""

import streamlit as st

def show_animal_selector():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ã–±–æ—Ä–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
    
    Returns:
        str: –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    """
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ –±—ã–ª–æ
    if 'selected_animal' not in st.session_state:
        st.session_state.selected_animal = ""
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
    popular_animals = [
        ("üêï", "–°–æ–±–∞–∫–∞"),
        ("üê±", "–ö–æ—à–∫–∞"),
        ("üê¶", "–ü—Ç–∏—Ü–∞"),
        ("üê∞", "–ö—Ä–æ–ª–∏–∫"),
        ("üêÑ", "–ö–†–° (–∫–æ—Ä–æ–≤–∞/–±—ã–∫)"),
        ("üê¥", "–õ–æ—à–∞–¥—å")
    ]
    
    st.markdown("**–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö:**")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö
    cols = st.columns(3)
    
    for i, (emoji, animal_name) in enumerate(popular_animals):
        col = cols[i % 3]
        with col:
            # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ
            button_type = "primary" if st.session_state.selected_animal == animal_name else "secondary"
            if st.button(f"{emoji} {animal_name}", 
                        key=f"animal_{i}", 
                        use_container_width=True, 
                        type=button_type):
                st.session_state.selected_animal = animal_name
                st.rerun()
    
    st.markdown("---")
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    st.markdown("**–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∂–∏–≤–æ—Ç–Ω–æ–µ:**")
    custom_animal = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Ö–æ–º—è–∫, –∏–≥—É–∞–Ω–∞, –∫–æ–∑–∞...",
        key="custom_animal_input",
        value=st.session_state.selected_animal if st.session_state.selected_animal not in [animal[1] for animal in popular_animals] else ""
    )
    
    # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if custom_animal.strip() and custom_animal.strip() != st.session_state.selected_animal:
        st.session_state.selected_animal = custom_animal.strip()
    
    return st.session_state.selected_animal

def show_animal_card(animal_name):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
    
    Args:
        animal_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    """
    if not animal_name:
        return
        
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    animal_emoji_map = {
        "—Å–æ–±–∞–∫–∞": "üêï",
        "–∫–æ—à–∫–∞": "üê±",
        "–ø—Ç–∏—Ü–∞": "üê¶",
        "–∫—Ä–æ–ª–∏–∫": "üê∞",
        "–∫—Ä—Å (–∫–æ—Ä–æ–≤–∞/–±—ã–∫)": "üêÑ",
        "–∫–æ—Ä–æ–≤–∞": "üêÑ",
        "–±—ã–∫": "üêÑ",
        "–ª–æ—à–∞–¥—å": "üê¥"
    }
    
    emoji = animal_emoji_map.get(animal_name.lower(), "üêæ")
    
    # –ö–∞—Ä—Ç–æ—á–∫–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    with st.container():
        st.markdown(f"""
        <div style="
            padding: 20px;
            border-radius: 10px;
            border: 2px solid #e0e0e0;
            background-color: #f8f9fa;
            text-align: center;
        ">
            <h2>{emoji}</h2>
            <h3>{animal_name}</h3>
        </div>
        """, unsafe_allow_html=True)
