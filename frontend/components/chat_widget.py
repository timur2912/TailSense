"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
"""

import streamlit as st
from datetime import datetime

def show_chat_interface():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞
    chat_container = st.container()
    
    with chat_container:
        # –ï—Å–ª–∏ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not st.session_state.chat_history:
            show_welcome_message()
        else:
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
            for message in st.session_state.chat_history:
                show_message(message["role"], message["content"])

def show_welcome_message():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞."""
    
    with st.chat_message("assistant"):
        st.markdown("""
        üëã **–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ò–ò-–≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä.**
        
        –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞. 
        
        **–ß—Ç–æ —è –≤–∏–∂—É –∏–∑ –≤–∞—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:**
        """)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∂–∏–≤–æ—Ç–Ω–æ–º –∏ —Å–∏–º–ø—Ç–æ–º–∞—Ö
        if st.session_state.selected_animal:
            st.markdown(f"üêæ **–ñ–∏–≤–æ—Ç–Ω–æ–µ:** {st.session_state.selected_animal}")
        
        if st.session_state.selected_symptoms:
            symptoms_text = ", ".join(st.session_state.selected_symptoms)
            st.markdown(f"ü©∫ **–°–∏–º–ø—Ç–æ–º—ã:** {symptoms_text}")
        
        st.markdown("""
        **–ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å:**
        - –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö
        - –û–ø–∏—à–∏—Ç–µ, –∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–∞—á–∞–ª–∏—Å—å
        - –£—Ç–æ—á–Ω–∏—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
        - –ó–∞–¥–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ –ø–∏—Ç–æ–º—Ü–∞
        
        üí¨ *–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∏–∂–µ...*
        """)

def show_message(role, content):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ.
    
    Args:
        role (str): –†–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ("user" –∏–ª–∏ "assistant")
        content (str): –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    
    with st.chat_message(role):
        if role == "user":
            # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            st.markdown(content)
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            st.markdown(content)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            current_time = datetime.now().strftime("%H:%M")
            st.caption(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {current_time}")

def show_chat_stats():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏."""
    
    if st.session_state.chat_history:
        user_messages = len([msg for msg in st.session_state.chat_history if msg["role"] == "user"])
        assistant_messages = len([msg for msg in st.session_state.chat_history if msg["role"] == "assistant"])
        
        st.sidebar.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞")
        st.sidebar.metric("–í–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π", user_messages)
        st.sidebar.metric("–û—Ç–≤–µ—Ç–æ–≤ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞", assistant_messages)

def clear_chat_history():
    """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞."""
    st.session_state.chat_history = []

def export_chat_history():
    """
    –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç.
    
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
    """
    if not st.session_state.chat_history:
        return "–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø—É—Å—Ç–∞"
    
    export_text = f"""
–ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø –í–ï–¢–ï–†–ò–ù–ê–†–ê
======================

–ñ–∏–≤–æ—Ç–Ω–æ–µ: {st.session_state.selected_animal}
–°–∏–º–ø—Ç–æ–º—ã: {', '.join(st.session_state.selected_symptoms)}
–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}

–ò–°–¢–û–†–ò–Ø –°–û–û–ë–©–ï–ù–ò–ô:
==================

"""
    
    for i, message in enumerate(st.session_state.chat_history, 1):
        role_name = "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨" if message["role"] == "user" else "–í–ï–¢–ï–†–ò–ù–ê–†"
        export_text += f"{i}. {role_name}:\n{message['content']}\n\n"
    
    return export_text

def show_chat_actions():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —á–∞—Ç–∞."""
    
    if st.session_state.chat_history:
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üì• –≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞"):
                chat_export = export_chat_history()
                st.download_button(
                    label="üíæ –°–∫–∞—á–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é",
                    data=chat_export,
                    file_name=f"vet_consultation_{datetime.now().strftime('%Y%m%d_%H%M')}.txt",
                    mime="text/plain"
                )
        
        with col2:
            if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"):
                clear_chat_history()
                st.rerun()

