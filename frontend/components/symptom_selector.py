"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤.
"""

import streamlit as st

def show_symptom_selector():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ã–±–æ—Ä–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤.
    
    Returns:
        list: –°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤
    """
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ –±—ã–ª–æ
    if 'selected_symptoms' not in st.session_state:
        st.session_state.selected_symptoms = []
    if 'custom_symptom' not in st.session_state:
        st.session_state.custom_symptom = ""
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    symptom_categories = {
        "üå°Ô∏è –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ": [
            "–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
            "–ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", 
            "–í—è–ª–æ—Å—Ç—å, –∞–ø–∞—Ç–∏—è",
            "–ü–æ—Ç–µ—Ä—è –∞–ø–ø–µ—Ç–∏—Ç–∞",
            "–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∂–∞–∂–¥–∞"
        ],
        "ü©∫ –î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": [
            "–ö–∞—à–µ–ª—å",
            "–ß–∏—Ö–∞–Ω–∏–µ",
            "–ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ",
            "–•—Ä–∏–ø—ã",
            "–í—ã–¥–µ–ª–µ–Ω–∏—è –∏–∑ –Ω–æ—Å–∞"
        ],
        "üçΩÔ∏è –ü–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ": [
            "–†–≤–æ—Ç–∞",
            "–î–∏–∞—Ä–µ—è",
            "–ó–∞–ø–æ—Ä",
            "–û—Ç–∫–∞–∑ –æ—Ç –µ–¥—ã",
            "–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –∞–ø–ø–µ—Ç–∏—Ç"
        ],
        "üëÅÔ∏è –í–Ω–µ—à–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏": [
            "–í—ã–¥–µ–ª–µ–Ω–∏—è –∏–∑ –≥–ª–∞–∑",
            "–°–ª–µ–∑–æ—Ç–µ—á–µ–Ω–∏–µ",
            "–ó—É–¥, —Ä–∞—Å—á–µ—Å—ã",
            "–í—ã–ø–∞–¥–µ–Ω–∏–µ —à–µ—Ä—Å—Ç–∏",
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Å–ª–∏–∑–∏—Å—Ç—ã—Ö"
        ],
        "üèÉ –ü–æ–≤–µ–¥–µ–Ω–∏–µ": [
            "–ë–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ",
            "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å",
            "–•—Ä–æ–º–æ—Ç–∞",
            "–î—Ä–æ–∂—å",
            "–°–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å"
        ]
    }
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã –∏–∑ session_state
    current_symptoms = st.session_state.selected_symptoms.copy()
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–∏–º–ø—Ç–æ–º—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    for category, symptoms in symptom_categories.items():
        with st.expander(category, expanded=True):
            for symptom in symptoms:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —Å–∏–º–ø—Ç–æ–º
                is_selected = symptom in current_symptoms
                
                if st.checkbox(symptom, 
                              value=is_selected, 
                              key=f"symptom_checkbox_{symptom}"):
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∏–º–ø—Ç–æ–º –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
                    if symptom not in current_symptoms:
                        current_symptoms.append(symptom)
                else:
                    # –£–¥–∞–ª—è–µ–º —Å–∏–º–ø—Ç–æ–º –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É–±—Ä–∞–Ω
                    if symptom in current_symptoms:
                        current_symptoms.remove(symptom)
    
    st.markdown("---")
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–∏–º–ø—Ç–æ–º–∞
    st.markdown("**–î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∏–º–ø—Ç–æ–º:**")
    custom_symptom = st.text_input(
        "–û–ø–∏—à–∏—Ç–µ —Å–∏–º–ø—Ç–æ–º",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∑–≤—É–∫–∏, –Ω–µ–æ–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ...",
        key="custom_symptom_input",
        value=st.session_state.custom_symptom
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∏–º–ø—Ç–æ–º
    if custom_symptom.strip():
        custom_clean = custom_symptom.strip()
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∏–º–ø—Ç–æ–º –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if custom_clean not in current_symptoms and custom_clean != st.session_state.custom_symptom:
            current_symptoms.append(custom_clean)
        st.session_state.custom_symptom = custom_clean
    elif st.session_state.custom_symptom and st.session_state.custom_symptom in current_symptoms:
        # –£–¥–∞–ª—è–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∏–º–ø—Ç–æ–º –µ—Å–ª–∏ –ø–æ–ª–µ –æ—á–∏—â–µ–Ω–æ
        current_symptoms.remove(st.session_state.custom_symptom)
        st.session_state.custom_symptom = ""
    
    # –û–±–Ω–æ–≤–ª—è–µ–º session_state
    st.session_state.selected_symptoms = current_symptoms
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã
    if current_symptoms:
        st.markdown("### ‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã:")
        for i, symptom in enumerate(current_symptoms, 1):
            st.markdown(f"{i}. {symptom}")
    else:
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–ø—Ç–æ–º—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π")
    
    return current_symptoms

def show_symptom_summary(symptoms):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–≤–æ–¥–∫—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤.
    
    Args:
        symptoms (list): –°–ø–∏—Å–æ–∫ —Å–∏–º–ø—Ç–æ–º–æ–≤
    """
    if not symptoms:
        st.warning("–°–∏–º–ø—Ç–æ–º—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã")
        return
    
    st.markdown("### ü©∫ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã:")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–∏–º–ø—Ç–æ–º—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    symptom_text = ", ".join(symptoms)
    
    st.info(f"**–í—Å–µ–≥–æ —Å–∏–º–ø—Ç–æ–º–æ–≤:** {len(symptoms)}")
    st.markdown(f"**–°–ø–∏—Å–æ–∫:** {symptom_text}")

def get_symptom_severity_color(symptom):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —Å–∏–º–ø—Ç–æ–º–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏.
    
    Args:
        symptom (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–∞
        
    Returns:
        str: CSS —Ü–≤–µ—Ç
    """
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã
    critical_symptoms = [
        "–∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ", "–≤—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—Å—É–¥–æ—Ä–æ–≥–∏", 
        "–ø–æ—Ç–µ—Ä—è —Å–æ–∑–Ω–∞–Ω–∏—è", "–∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ"
    ]
    
    # –°–µ—Ä—å–µ–∑–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã
    serious_symptoms = [
        "—Ä–≤–æ—Ç–∞", "–¥–∏–∞—Ä–µ—è", "–æ—Ç–∫–∞–∑ –æ—Ç –µ–¥—ã", "–≤—è–ª–æ—Å—Ç—å", "—Ö—Ä–æ–º–æ—Ç–∞"
    ]
    
    symptom_lower = symptom.lower()
    
    if any(critical in symptom_lower for critical in critical_symptoms):
        return "#ff4444"  # –ö—Ä–∞—Å–Ω—ã–π
    elif any(serious in symptom_lower for serious in serious_symptoms):
        return "#ff9900"  # –û—Ä–∞–Ω–∂–µ–≤—ã–π
    else:
        return "#4CAF50"  # –ó–µ–ª–µ–Ω—ã–π
